{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Mesgs.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { connectWebSocket, sendMessage, disconnectWebSocket } from '../../actions/chat';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = ({\n  user,\n  isAuthenticated,\n  socket,\n  msgData,\n  loading,\n  connectWebSocket,\n  sendMessage,\n  nowTalkingTo\n}) => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n  const messageList = useRef(null);\n  useEffect(() => {\n    if (loading && isAuthenticated) {\n      connectWebSocket(user._id);\n    }\n\n    messageList.scrollIntoView({\n      behavior: 'auto'\n    });\n  }, [loading, isAuthenticated, connectWebSocket]);\n\n  const send = () => {\n    if (msg === '') {\n      return;\n    }\n\n    const data = {\n      me: true,\n      from: user._id,\n      to: nowTalkingTo,\n      time: new Date(),\n      msg: msg\n    };\n    sendMessage(socket, data); //action 裡的function\n\n    setMsg('');\n  };\n\n  const handleKeyPress = e => {\n    if (e.which === 13) {\n      send();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mesgs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"msg_history\",\n    ref: messageList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, msgData && msgData.map(data => data.me === true ? /*#__PURE__*/React.createElement(Outgoing_msg, {\n    msg: data.msg,\n    key: data.time,\n    time: data.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Incoming_msg, {\n    msg: data.msg,\n    key: data.time,\n    time: data.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"type_msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_msg_write\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"write_msg\",\n    value: msg,\n    onChange: e => {\n      setMsg(e.target.value);\n    },\n    onKeyPress: e => handleKeyPress(e),\n    placeholder: \"Type a message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"msg_send_btn\",\n    type: \"button\",\n    onClick: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-paper-plane-o\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })))));\n};\n\nMesgs.prototypes = {\n  msgData: PropTypes.object.isRequired,\n  disconnectWebSocket: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  socket: state.chat.socket,\n  msgData: state.chat.msgData,\n  loading: state.chat.loading,\n  nowTalkingTo: state.chat.nowTalkingTo\n});\n\nexport default connect(mapStateToProps, {\n  connectWebSocket,\n  sendMessage,\n  disconnectWebSocket\n})(Mesgs);","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Mesgs.js"],"names":["React","useEffect","useState","useRef","connect","PropTypes","connectWebSocket","sendMessage","disconnectWebSocket","Incoming_msg","Outgoing_msg","Mesgs","user","isAuthenticated","socket","msgData","loading","nowTalkingTo","ws","setWs","msg","setMsg","messageList","_id","scrollIntoView","behavior","send","data","me","from","to","time","Date","handleKeyPress","e","which","map","target","value","prototypes","object","isRequired","func","mapStateToProps","state","auth","chat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  connectWebSocket,\n  sendMessage,\n  disconnectWebSocket,\n} from '../../actions/chat';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = ({\n  user,\n  isAuthenticated,\n  socket,\n  msgData,\n  loading,\n  connectWebSocket,\n  sendMessage,\n  nowTalkingTo,\n}) => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n  const messageList = useRef(null);\n\n  useEffect(() => {\n    if (loading && isAuthenticated) {\n      connectWebSocket(user._id);\n    }\n    messageList.scrollIntoView({ behavior: 'auto' });\n  }, [loading, isAuthenticated, connectWebSocket]);\n\n  const send = () => {\n    if (msg === '') {\n      return;\n    }\n    const data = {\n      me: true,\n      from: user._id,\n      to: nowTalkingTo,\n      time: new Date(),\n      msg: msg,\n    };\n\n    sendMessage(socket, data); //action 裡的function\n\n    setMsg('');\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.which === 13) {\n      send();\n    }\n  };\n  return (\n    <div className='mesgs'>\n      <div className='msg_history' ref={messageList}>\n        {/*  */}\n\n        {msgData &&\n          msgData.map((data) =>\n            data.me === true ? (\n              <Outgoing_msg msg={data.msg} key={data.time} time={data.time} />\n            ) : (\n              <Incoming_msg msg={data.msg} key={data.time} time={data.time} />\n            )\n          )}\n\n        {/*  */}\n      </div>\n\n      <div className='type_msg'>\n        <div className='input_msg_write'>\n          {/* Input massage */}\n          <input\n            type='text'\n            className='write_msg'\n            value={msg}\n            onChange={(e) => {\n              setMsg(e.target.value);\n            }}\n            onKeyPress={(e) => handleKeyPress(e)}\n            placeholder='Type a message'\n          />\n\n          <button className='msg_send_btn' type='button' onClick={send}>\n            <i className='fa fa-paper-plane-o' aria-hidden='true'></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMesgs.prototypes = {\n  msgData: PropTypes.object.isRequired,\n  disconnectWebSocket: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  socket: state.chat.socket,\n  msgData: state.chat.msgData,\n  loading: state.chat.loading,\n  nowTalkingTo: state.chat.nowTalkingTo,\n});\n\nexport default connect(mapStateToProps, {\n  connectWebSocket,\n  sendMessage,\n  disconnectWebSocket,\n})(Mesgs);\n"]},"metadata":{},"sourceType":"module"}