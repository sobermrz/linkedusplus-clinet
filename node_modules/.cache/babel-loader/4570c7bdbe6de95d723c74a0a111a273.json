{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Mesgs.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport webSocket, { Socket } from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { connectWebSocket } from '../../actions/chat';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = ({\n  msgData,\n  loading,\n  connectWebSocket\n}) => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n  useEffect(() => {\n    if (loading) {\n      connectWebSocket();\n    }\n\n    return () => {\n      //進行登出socket\n      console.log('close');\n    };\n  }, [loading]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    ws.on('getMessage', data => {//setmsgData([{ msg: data.msg, time: data.time }, ...msgData]);\n      //console.log(data.from, ': ', data.msg, msgData.length);\n    });\n  };\n\n  const sendMessage = () => {\n    const data = {\n      from: 'Andrew',\n      to: 'Nicole',\n      time: new Date(),\n      msg: msg\n    }; //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n\n    ws != null && ws.emit('getMessage', data);\n    setMsg('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"mesgs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"msg_history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Incoming_msg, {\n    msg: \"test msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Outgoing_msg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), msgData.map(data => /*#__PURE__*/React.createElement(Incoming_msg, {\n    msg: data.msg,\n    key: data.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"type_msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input_msg_write\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    class: \"write_msg\",\n    value: msg,\n    onChange: e => {\n      setMsg(e.target.value);\n    },\n    placeholder: \"Type a message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"msg_send_btn\",\n    type: \"button\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-paper-plane-o\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })))));\n};\n\nMesgs.prototypes = {\n  msgData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  socket: state.chat.socket,\n  msgData: state.chat.msgData,\n  loading: state.chat.loading\n});\n\nexport default connect(mapStateToProps, {\n  connectWebSocket\n})(Mesgs);","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Mesgs.js"],"names":["React","Fragment","useEffect","useState","webSocket","Socket","connect","PropTypes","connectWebSocket","Incoming_msg","Outgoing_msg","Mesgs","msgData","loading","ws","setWs","msg","setMsg","console","log","initWebSocket","on","data","sendMessage","from","to","time","Date","emit","map","e","target","value","prototypes","object","isRequired","mapStateToProps","state","socket","chat"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport webSocket, { Socket } from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { connectWebSocket } from '../../actions/chat';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = ({ msgData, loading, connectWebSocket }) => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n\n  useEffect(() => {\n    if (loading) {\n      connectWebSocket();\n    }\n    return () => {\n      //進行登出socket\n      console.log('close');\n    };\n  }, [loading]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    ws.on('getMessage', (data) => {\n      //setmsgData([{ msg: data.msg, time: data.time }, ...msgData]);\n      //console.log(data.from, ': ', data.msg, msgData.length);\n    });\n  };\n\n  const sendMessage = () => {\n    const data = {\n      from: 'Andrew',\n      to: 'Nicole',\n      time: new Date(),\n      msg: msg,\n    };\n\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    ws != null && ws.emit('getMessage', data);\n    setMsg('');\n  };\n\n  return (\n    <div class='mesgs'>\n      <div class='msg_history'>\n        {/*  */}\n        <Incoming_msg msg='test msg' />\n        <Outgoing_msg />\n        {msgData.map((data) => (\n          <Incoming_msg msg={data.msg} key={data.time} />\n        ))}\n\n        {/*  */}\n      </div>\n\n      <div class='type_msg'>\n        <div class='input_msg_write'>\n          {/* Input massage */}\n          <input\n            type='text'\n            class='write_msg'\n            value={msg}\n            onChange={(e) => {\n              setMsg(e.target.value);\n            }}\n            placeholder='Type a message'\n          />\n\n          <button class='msg_send_btn' type='button' onClick={sendMessage}>\n            <i class='fa fa-paper-plane-o' aria-hidden='true'></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMesgs.prototypes = {\n  msgData: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  socket: state.chat.socket,\n  msgData: state.chat.msgData,\n  loading: state.chat.loading,\n});\n\nexport default connect(mapStateToProps, { connectWebSocket })(Mesgs);\n"]},"metadata":{},"sourceType":"module"}