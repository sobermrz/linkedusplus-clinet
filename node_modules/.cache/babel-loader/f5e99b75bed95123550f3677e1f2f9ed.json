{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Inbox_people.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Search from './Search';\nimport { getFriendsProfiles } from '../../actions/profile';\nimport Chat_list from './Chat_list';\nimport Spinner from '../layout/Spinner';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { setTalker } from '../../actions/chat';\n\nconst Inbox_people = ({\n  profile: {\n    friends,\n    profile_loading\n  },\n  chat_loading,\n  getFriendsProfiles,\n  nowTalkingTo,\n  allMsgData\n}) => {\n  //要讀取所有朋友資料\n  useEffect(() => {\n    getFriendsProfiles();\n\n    if (!nowTalkingTo && friends.length !== 0) {\n      setTalker(friends[0].userId, allMsgData);\n      console.log(friends[0].name, 'setTalker');\n    }\n  }, [getFriendsProfiles]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"inbox_people\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"inbox_chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, profile_loading || chat_loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }) : friends.length > 0 ? friends.map(friend => /*#__PURE__*/React.createElement(Chat_list, {\n    key: friend.user._id,\n    userId: friend.user._id,\n    name: friend.user.name,\n    avatar: friend.user.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"No friends found...\")));\n};\n\nInbox_people.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  chat_loading: state.chat.loading,\n  nowTalkingTo: state.chat.nowTalkingTo,\n  allMsgData: state.chat.allMsgData\n});\n\nexport default connect(mapStateToProps, {\n  getFriendsProfiles,\n  setTalker\n})(Inbox_people);","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Inbox_people.js"],"names":["React","Fragment","useEffect","useState","connect","PropTypes","Search","getFriendsProfiles","Chat_list","Spinner","Moment","moment","setTalker","Inbox_people","profile","friends","profile_loading","chat_loading","nowTalkingTo","allMsgData","length","userId","console","log","name","map","friend","user","_id","avatar","propTypes","object","isRequired","mapStateToProps","state","chat","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AACA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GADW;AAEpBC,EAAAA,YAFoB;AAGpBV,EAAAA,kBAHoB;AAIpBW,EAAAA,YAJoB;AAKpBC,EAAAA;AALoB,CAAD,KAMf;AACJ;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,kBAAkB;;AAClB,QAAI,CAACW,YAAD,IAAiBH,OAAO,CAACK,MAAR,KAAmB,CAAxC,EAA2C;AACzCR,MAAAA,SAAS,CAACG,OAAO,CAAC,CAAD,CAAP,CAAWM,MAAZ,EAAoBF,UAApB,CAAT;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYR,OAAO,CAAC,CAAD,CAAP,CAAWS,IAAvB,EAA6B,WAA7B;AACD;AACF,GANQ,EAMN,CAACjB,kBAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,eAAe,IAAIC,YAAnB,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEGF,OAAO,CAACK,MAAR,GAAiB,CAAjB,GACFL,OAAO,CAACU,GAAR,CAAaC,MAAD,iBACV,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,MAAM,CAACC,IAAP,CAAYC,GADnB;AAEE,IAAA,MAAM,EAAEF,MAAM,CAACC,IAAP,CAAYC,GAFtB;AAGE,IAAA,IAAI,EAAEF,MAAM,CAACC,IAAP,CAAYH,IAHpB;AAIE,IAAA,MAAM,EAAEE,MAAM,CAACC,IAAP,CAAYE,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADE,gBAUF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAbJ,CAFF,CADF;AAqBD,CArCD;;AAuCAhB,YAAY,CAACiB,SAAb,GAAyB;AACvBhB,EAAAA,OAAO,EAAET,SAAS,CAAC0B,MAAV,CAAiBC;AADH,CAAzB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCpB,EAAAA,OAAO,EAAEoB,KAAK,CAACpB,OADmB;AAElCG,EAAAA,YAAY,EAAEiB,KAAK,CAACC,IAAN,CAAWC,OAFS;AAGlClB,EAAAA,YAAY,EAAEgB,KAAK,CAACC,IAAN,CAAWjB,YAHS;AAIlCC,EAAAA,UAAU,EAAEe,KAAK,CAACC,IAAN,CAAWhB;AAJW,CAAZ,CAAxB;;AAOA,eAAef,OAAO,CAAC6B,eAAD,EAAkB;AAAE1B,EAAAA,kBAAF;AAAsBK,EAAAA;AAAtB,CAAlB,CAAP,CACbC,YADa,CAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Search from './Search';\nimport { getFriendsProfiles } from '../../actions/profile';\nimport Chat_list from './Chat_list';\nimport Spinner from '../layout/Spinner';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { setTalker } from '../../actions/chat';\nconst Inbox_people = ({\n  profile: { friends, profile_loading },\n  chat_loading,\n  getFriendsProfiles,\n  nowTalkingTo,\n  allMsgData,\n}) => {\n  //要讀取所有朋友資料\n  useEffect(() => {\n    getFriendsProfiles();\n    if (!nowTalkingTo && friends.length !== 0) {\n      setTalker(friends[0].userId, allMsgData);\n      console.log(friends[0].name, 'setTalker');\n    }\n  }, [getFriendsProfiles]);\n\n  return (\n    <div class='inbox_people'>\n      <Search />\n      <div class='inbox_chat'>\n        {profile_loading || chat_loading ? (\n          <Spinner />\n        ) : friends.length > 0 ? (\n          friends.map((friend) => (\n            <Chat_list\n              key={friend.user._id}\n              userId={friend.user._id}\n              name={friend.user.name}\n              avatar={friend.user.avatar}\n            />\n          ))\n        ) : (\n          <span>No friends found...</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nInbox_people.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  chat_loading: state.chat.loading,\n  nowTalkingTo: state.chat.nowTalkingTo,\n  allMsgData: state.chat.allMsgData,\n});\n\nexport default connect(mapStateToProps, { getFriendsProfiles, setTalker })(\n  Inbox_people\n);\n"]},"metadata":{},"sourceType":"module"}