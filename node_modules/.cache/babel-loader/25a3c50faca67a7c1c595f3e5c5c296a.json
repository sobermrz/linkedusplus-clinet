{"ast":null,"code":"import _regeneratorRuntime from\"/Users/andrew/mern-workspace/linkedUs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/andrew/mern-workspace/linkedUs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import webSocket from'socket.io-client';import axios from'axios';import{CONNECT_WEBSOCKET,DISCONNECT_WEBSOCKET,UPDATE_MESSAGE,SET_TALKER,UPDATE_ALL_MSG_DATA}from'./types';import store from'../store';export var connectWebSocket=function connectWebSocket(userId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var socketId,socket;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;socketId='';_context.next=4;return webSocket('http://localhost:5000');case 4:socket=_context.sent;console.log('waiting for the message...');socket.on('connect',function(){socketId=socket.id;//Send User ID and user webSocket ID\n//之後這裡可以加入toekn，讓server進行驗證，見證通過才讓他進行通訊\nsocket.emit('user_login',{userId:userId,socketId:socketId});});_context.next=9;return dispatch(getAllMsgData());case 9:socket.on('getMessage',function(data){console.log('From: ',data.from,'Msg: ',data.msg);var state=store.getState();var nowTalkingTo=state.chat.nowTalkingTo;var allMsgData=new Map(state.chat.allMsgData);//需要nowTalkingTo，判斷是否等於from，等於就要同時更新msaData和allMsgData\nif(data.from===nowTalkingTo){dispatch({type:UPDATE_MESSAGE,payload:Object.assign({},data)});}//將msgData添加到對應id的allMsgData\nif(allMsgData.get(data.from)){allMsgData.get(data.from).push(Object.assign({},data));}else{allMsgData.set(data.from,[Object.assign({},data)]);}dispatch({type:UPDATE_ALL_MSG_DATA,payload:allMsgData});});//TO DO: 像server 獲取所有連天紀錄，並綁定到allMsgData\ndispatch({type:CONNECT_WEBSOCKET,payload:socket});_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,13]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var sendMessage=function sendMessage(socket,data){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var state,nowTalkingTo,allMsgData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{socket!=null&&socket.emit('getMessage',data);dispatch({type:UPDATE_MESSAGE,payload:Object.assign({},data)});state=store.getState();nowTalkingTo=state.chat.nowTalkingTo;allMsgData=new Map(state.chat.allMsgData);if(allMsgData.get(nowTalkingTo)){allMsgData.get(nowTalkingTo).push(Object.assign({},data));}else{allMsgData.set(nowTalkingTo,[Object.assign({},data)]);}dispatch({type:UPDATE_ALL_MSG_DATA,payload:allMsgData});}catch(error){console.log(error);}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};//設定要連天的對象，去allMsgData裡拿出對應user id 的聊天資料，並將此資料設定為msgData\nexport var setTalker=function setTalker(userId,allMsgData){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var msgData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:msgData=allMsgData&&allMsgData.get(userId)?allMsgData.get(userId):[];dispatch({type:SET_TALKER,payload:{msgData:msgData,userId:userId}});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};//Get All History Msg Data\nexport var getAllMsgData=function getAllMsgData(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var res,obj,allMsgData,_i,_Object$keys,k;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return axios.get('/api/users/msg');case 3:res=_context4.sent;console.log(res.data.allMsgData);obj=res.data.allMsgData;allMsgData=new Map();//Transform object to Map\nfor(_i=0,_Object$keys=Object.keys(obj);_i<_Object$keys.length;_i++){k=_Object$keys[_i];allMsgData.set(k,obj[k]);}dispatch({type:UPDATE_ALL_MSG_DATA,payload:allMsgData});_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 14:case\"end\":return _context4.stop();}}},_callee4,null,[[0,11]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};//Disconnect\nexport var disconnectWebSocket=function disconnectWebSocket(){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var state,socket;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:state=store.getState();socket=state.chat.socket;if(socket)socket.disconnect();dispatch({type:DISCONNECT_WEBSOCKET,payload:{}});case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref5.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUs/client/src/actions/chat.js"],"names":["webSocket","axios","CONNECT_WEBSOCKET","DISCONNECT_WEBSOCKET","UPDATE_MESSAGE","SET_TALKER","UPDATE_ALL_MSG_DATA","store","connectWebSocket","userId","dispatch","socketId","socket","console","log","on","id","emit","getAllMsgData","data","from","msg","state","getState","nowTalkingTo","chat","allMsgData","Map","type","payload","Object","assign","get","push","set","sendMessage","error","setTalker","msgData","res","obj","keys","k","disconnectWebSocket","disconnect"],"mappings":"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","sourcesContent":["import webSocket from 'socket.io-client';\nimport axios from 'axios';\nimport {\n  CONNECT_WEBSOCKET,\n  DISCONNECT_WEBSOCKET,\n  UPDATE_MESSAGE,\n  SET_TALKER,\n  UPDATE_ALL_MSG_DATA,\n} from './types';\nimport store from '../store';\nexport const connectWebSocket = (userId) => async (dispatch) => {\n  try {\n    let socketId = '';\n    const socket = await webSocket('http://localhost:5000');\n\n    console.log('waiting for the message...');\n\n    socket.on('connect', () => {\n      socketId = socket.id;\n      //Send User ID and user webSocket ID\n      //之後這裡可以加入toekn，讓server進行驗證，見證通過才讓他進行通訊\n      socket.emit('user_login', {\n        userId,\n        socketId,\n      });\n    });\n\n    await dispatch(getAllMsgData());\n\n    socket.on('getMessage', (data) => {\n      console.log('From: ', data.from, 'Msg: ', data.msg);\n      const state = store.getState();\n      const nowTalkingTo = state.chat.nowTalkingTo;\n      const allMsgData = new Map(state.chat.allMsgData);\n      //需要nowTalkingTo，判斷是否等於from，等於就要同時更新msaData和allMsgData\n\n      if (data.from === nowTalkingTo) {\n        dispatch({\n          type: UPDATE_MESSAGE,\n          payload: Object.assign({}, data),\n        });\n      }\n\n      //將msgData添加到對應id的allMsgData\n      if (allMsgData.get(data.from)) {\n        allMsgData.get(data.from).push(Object.assign({}, data));\n      } else {\n        allMsgData.set(data.from, [Object.assign({}, data)]);\n      }\n\n      dispatch({\n        type: UPDATE_ALL_MSG_DATA,\n        payload: allMsgData,\n      });\n    });\n\n    //TO DO: 像server 獲取所有連天紀錄，並綁定到allMsgData\n\n    dispatch({ type: CONNECT_WEBSOCKET, payload: socket });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const sendMessage = (socket, data) => async (dispatch) => {\n  try {\n    socket != null && socket.emit('getMessage', data);\n    dispatch({\n      type: UPDATE_MESSAGE,\n      payload: Object.assign({}, data),\n    });\n    const state = store.getState();\n    const nowTalkingTo = state.chat.nowTalkingTo;\n    const allMsgData = new Map(state.chat.allMsgData);\n\n    if (allMsgData.get(nowTalkingTo)) {\n      allMsgData.get(nowTalkingTo).push(Object.assign({}, data));\n    } else {\n      allMsgData.set(nowTalkingTo, [Object.assign({}, data)]);\n    }\n    dispatch({\n      type: UPDATE_ALL_MSG_DATA,\n      payload: allMsgData,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//設定要連天的對象，去allMsgData裡拿出對應user id 的聊天資料，並將此資料設定為msgData\nexport const setTalker = (userId, allMsgData) => async (dispatch) => {\n  const msgData =\n    allMsgData && allMsgData.get(userId) ? allMsgData.get(userId) : [];\n\n  dispatch({\n    type: SET_TALKER,\n    payload: { msgData, userId },\n  });\n};\n\n//Get All History Msg Data\nexport const getAllMsgData = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/users/msg');\n    console.log(res.data.allMsgData);\n    let obj = res.data.allMsgData;\n\n    let allMsgData = new Map();\n    //Transform object to Map\n    for (let k of Object.keys(obj)) {\n      allMsgData.set(k, obj[k]);\n    }\n    dispatch({\n      type: UPDATE_ALL_MSG_DATA,\n      payload: allMsgData,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//Disconnect\nexport const disconnectWebSocket = () => async (dispatch) => {\n  const state = store.getState();\n  const socket = state.chat.socket;\n  if (socket) socket.disconnect();\n\n  dispatch({\n    type: DISCONNECT_WEBSOCKET,\n    payload: {},\n  });\n};\n"]},"metadata":{},"sourceType":"module"}