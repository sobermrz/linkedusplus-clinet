{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/mern-workspace/linkedUs/client/src/components/profiles/Profiles.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from '../profiles/ProfileItem';\nimport { getProfiles } from '../../actions/profile';\nimport auth from '../../reducers/auth';\n\nconst Profiles = ({\n  profile: {\n    profiles,\n    loading\n  },\n  getProfiles,\n  user,\n  isAuthenticated,\n  authLoading\n}) => {\n  useEffect(() => {\n    if (!authLoading) {\n      getProfiles(isAuthenticated);\n    }\n  }, [getProfiles, authLoading]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Developers\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), \" Browse and connect with developers\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profiles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, profiles.length > 0 ? profiles.map(profile => /*#__PURE__*/React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"No profiles found...\"))));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  authLoading: state.auth.loading\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUs/client/src/components/profiles/Profiles.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Spinner","ProfileItem","getProfiles","auth","Profiles","profile","profiles","loading","user","isAuthenticated","authLoading","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GADO;AAEhBL,EAAAA,WAFgB;AAGhBM,EAAAA,IAHgB;AAIhBC,EAAAA,eAJgB;AAKhBC,EAAAA;AALgB,CAAD,KAMX;AACJd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACc,WAAL,EAAkB;AAChBR,MAAAA,WAAW,CAACO,eAAD,CAAX;AACD;AACF,GAJQ,EAIN,CAACP,WAAD,EAAcQ,WAAd,CAJM,CAAT;AAMA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,gBACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,wCAFF,eAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACK,MAAT,GAAkB,CAAlB,GACCL,QAAQ,CAACM,GAAT,CAAcP,OAAD,iBACX,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACQ,GAA1B;AAA+B,IAAA,OAAO,EAAER,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,CANF,CAJJ,CADF;AAwBD,CArCD;;AAuCAD,QAAQ,CAACU,SAAT,GAAqB;AACnBZ,EAAAA,WAAW,EAAEJ,SAAS,CAACiB,IAAV,CAAeC,UADT;AAGnBX,EAAAA,OAAO,EAAEP,SAAS,CAACmB,MAAV,CAAiBD;AAHP,CAArB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCd,EAAAA,OAAO,EAAEc,KAAK,CAACd,OADmB;AAElCG,EAAAA,IAAI,EAAEW,KAAK,CAAChB,IAAN,CAAWK,IAFiB;AAGlCC,EAAAA,eAAe,EAAEU,KAAK,CAAChB,IAAN,CAAWM,eAHM;AAIlCC,EAAAA,WAAW,EAAES,KAAK,CAAChB,IAAN,CAAWI;AAJU,CAAZ,CAAxB;;AAOA,eAAeR,OAAO,CAACmB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,QAA1C,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from '../profiles/ProfileItem';\nimport { getProfiles } from '../../actions/profile';\nimport auth from '../../reducers/auth';\n\nconst Profiles = ({\n  profile: { profiles, loading },\n  getProfiles,\n  user,\n  isAuthenticated,\n  authLoading,\n}) => {\n  useEffect(() => {\n    if (!authLoading) {\n      getProfiles(isAuthenticated);\n    }\n  }, [getProfiles, authLoading]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className='large text-primary'>Developers</h1>\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Browse and connect with\n            developers\n          </p>\n          <div className='profiles'>\n            {profiles.length > 0 ? (\n              profiles.map((profile) => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4>No profiles found...</h4>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  authLoading: state.auth.loading,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n"]},"metadata":{},"sourceType":"module"}