{"ast":null,"code":"import webSocket, { Socket } from 'socket.io-client';\nimport { CONNECT_WEBSOCKET } from './types';\nexport const connectWebSocket = () => async dispatch => {\n  try {\n    const ws = await webSocket('http://localhost:8888');\n    console.log('waiting for the message...');\n    ws.on('getMessage', data => {\n      console.log('From: ', data.from, 'Msg: ', data.msg);\n      dispatch({\n        type: UPDATE_MESSAGE,\n        payload: Object.assign({}, data)\n      });\n    });\n    dispatch({\n      type: CONNECT_WEBSOCKET,\n      payload: ws\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUsV1/client/src/actions/chat.js"],"names":["webSocket","Socket","CONNECT_WEBSOCKET","connectWebSocket","dispatch","ws","console","log","on","data","from","msg","type","UPDATE_MESSAGE","payload","Object","assign","error"],"mappings":"AAAA,OAAOA,SAAP,IAAoBC,MAApB,QAAkC,kBAAlC;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACF,UAAMC,EAAE,GAAG,MAAML,SAAS,CAAC,uBAAD,CAA1B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAF,IAAAA,EAAE,CAACG,EAAH,CAAM,YAAN,EAAqBC,IAAD,IAAU;AAC5BH,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,IAAI,CAACC,IAA3B,EAAiC,OAAjC,EAA0CD,IAAI,CAACE,GAA/C;AACAP,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEC,cADC;AAEPC,QAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,IAAlB;AAFF,OAAD,CAAR;AAID,KAND;AAQAL,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEV,iBAAR;AAA2BY,MAAAA,OAAO,EAAET;AAApC,KAAD,CAAR;AACD,GAZD,CAYE,OAAOY,KAAP,EAAc;AACdX,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD;AACF,CAhBM","sourcesContent":["import webSocket, { Socket } from 'socket.io-client';\nimport { CONNECT_WEBSOCKET } from './types';\nexport const connectWebSocket = () => async (dispatch) => {\n  try {\n    const ws = await webSocket('http://localhost:8888');\n    console.log('waiting for the message...');\n    ws.on('getMessage', (data) => {\n      console.log('From: ', data.from, 'Msg: ', data.msg);\n      dispatch({\n        type: UPDATE_MESSAGE,\n        payload: Object.assign({}, data),\n      });\n    });\n\n    dispatch({ type: CONNECT_WEBSOCKET, payload: ws });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}