{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/mern-workspace/devconnector/client/src/components/dashboard/Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    store.dispatch(getCurrentProfile());\n  }, []);\n  return loading && profile == null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 55\n    }\n  }, \"test\");\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/andrew/mern-workspace/devconnector/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","profile","loading","store","dispatch","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA,iBAAF;AAAqBE,EAAAA,IAArB;AAA2BC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAApC,CAAD,KAAgE;AAE9ET,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAACC,QAAN,CAAeN,iBAAiB,EAAhC;AAEH,GAHQ,EAGN,EAHM,CAAT;AAMA,SAAOI,OAAO,IAAID,OAAO,IAAI,IAAtB,gBAA6B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,gBAA2C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlD;AAKH,CAbD;;AAeAF,SAAS,CAACM,SAAV,GAAsB;AAClBP,EAAAA,iBAAiB,EAAEH,SAAS,CAACW,IAAV,CAAeC,UADhB;AAElBP,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD,UAFL;AAGlBN,EAAAA,OAAO,EAAEN,SAAS,CAACa,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADkB;AAE9BC,EAAAA,OAAO,EAAES,KAAK,CAACT;AAFe,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACa,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,SAAhD,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({ getCurrentProfile, auth, profile: { profile, loading } }) => {\n\n    useEffect(() => {\n        store.dispatch(getCurrentProfile());\n\n    }, []);\n\n\n    return loading && profile == null ? <Spinner /> : <Fragment>\n        test\n    </Fragment>\n\n\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n\n\n"]},"metadata":{},"sourceType":"module"}