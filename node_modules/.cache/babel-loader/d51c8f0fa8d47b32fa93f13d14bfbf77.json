{"ast":null,"code":"import _regeneratorRuntime from\"/Users/andrew/mern-workspace/linkedUs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/andrew/mern-workspace/linkedUs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{setAlert}from'./alert';import{REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,CLEAR_PROFILE,DISCONNECT_WEBSOCKET}from'../actions/types';import setAuthToken from'../utils/setAuthToken';// Load User 進行用戶認證並獲取用戶的基本資料\nexport var loadUser=function loadUser(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(localStorage.token){setAuthToken(localStorage.token);}_context.prev=1;_context.next=4;return axios.get('/api/auth');case 4:res=_context.sent;dispatch({type:USER_LOADED,payload:res.data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch({type:AUTH_ERROR});case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// Register User\nexport var register=function register(_ref2){var name=_ref2.name,email=_ref2.email,password=_ref2.password;return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,body,res,errors;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({name:name,email:email,password:password});_context2.prev=2;_context2.next=5;return axios.post('/api/users',body,config);case 5:res=_context2.sent;dispatch({type:REGISTER_SUCCESS,payload:res.data});dispatch(loadUser());_context2.next=15;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](2);errors=_context2.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,'danger'));});}dispatch({type:REGISTER_FAIL});case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[2,10]]);}));return function(_x2){return _ref3.apply(this,arguments);};}();};// Login User\nexport var login=function login(_ref4){var email=_ref4.email,password=_ref4.password;return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,body,res,errors;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({email:email,password:password});_context3.prev=2;_context3.next=5;return axios.post('/api/auth',body,config);case 5:res=_context3.sent;console.log('res data: ',res.data);dispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch(loadUser());_context3.next=16;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](2);errors=_context3.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,'danger'));});}dispatch({type:LOGIN_FAIL});case 16:case\"end\":return _context3.stop();}}},_callee3,null,[[2,11]]);}));return function(_x3){return _ref5.apply(this,arguments);};}();};// Logout / Clear Profile\nexport var logout=function logout(){return function(dispatch){dispatch({type:LOGOUT});dispatch({type:CLEAR_PROFILE});dispatch({type:DISCONNECT_WEBSOCKET});};};","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUs/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","DISCONNECT_WEBSOCKET","setAuthToken","loadUser","dispatch","localStorage","token","get","res","type","payload","data","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","console","log","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n  DISCONNECT_WEBSOCKET,\n} from '../actions/types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User 進行用戶認證並獲取用戶的基本資料\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login User\nexport const login = ({ email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    console.log('res data: ', res.data);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// Logout / Clear Profile\nexport const logout = () => (dispatch) => {\n  dispatch({ type: LOGOUT });\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({\n    type: DISCONNECT_WEBSOCKET,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}