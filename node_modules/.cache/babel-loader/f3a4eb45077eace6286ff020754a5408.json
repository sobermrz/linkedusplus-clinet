{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/mern-workspace/linkedUs/client/src/components/chat/Mesgs.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { connectWebSocket, sendMessage, disconnectWebSocket } from '../../actions/chat';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = ({\n  user,\n  isAuthenticated,\n  socket,\n  msgData,\n  loading,\n  connectWebSocket,\n  sendMessage,\n  nowTalkingTo,\n  disconnectWebSocket\n}) => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n  const msgButton = useRef(null);\n\n  const executeScroll = () => {\n    msgButton.current.scrollIntoView();\n  };\n\n  useEffect(() => {\n    if (loading && isAuthenticated) {\n      connectWebSocket(user._id);\n    }\n\n    executeScroll();\n  }, [loading, isAuthenticated, connectWebSocket, executeScroll]); //DidMount時綁定unlaod事件\n\n  useEffect(() => {\n    window.addEventListener('onbeforeunload', onUnmount());\n    console.log('進行綁定！');\n  }, []); //WillUnmount時移除綁定事件\n\n  useEffect(() => {\n    return () => {\n      window.removeEventListener('onbeforeunload', onUnmount());\n      console.log('解除綁定！');\n    };\n  }, []);\n\n  const onUnmount = () => {\n    disconnectWebSocket();\n  };\n\n  const send = () => {\n    if (msg === '') {\n      return;\n    }\n\n    const data = {\n      me: true,\n      from: user._id,\n      to: nowTalkingTo,\n      time: new Date(),\n      msg: msg\n    };\n    sendMessage(socket, data); //action 裡的function\n\n    setMsg('');\n  };\n\n  const handleKeyPress = e => {\n    if (e.which === 13) {\n      send();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mesgs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"msg_history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, msgData && msgData.map((data, index) => data.me === true ? /*#__PURE__*/React.createElement(Outgoing_msg, {\n    msg: data.msg,\n    key: data.toString() + index,\n    time: data.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Incoming_msg, {\n    msg: data.msg,\n    key: data.toString() + index,\n    time: data.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: msgButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"type_msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_msg_write\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"write_msg\",\n    value: msg,\n    onChange: e => {\n      setMsg(e.target.value);\n    },\n    onKeyPress: e => handleKeyPress(e),\n    placeholder: \"Type a message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"msg_send_btn\",\n    type: \"button\",\n    onClick: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-paper-plane-o\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })))));\n};\n\nMesgs.prototypes = {\n  msgData: PropTypes.object.isRequired,\n  disconnectWebSocket: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  socket: state.chat.socket,\n  msgData: state.chat.msgData,\n  loading: state.chat.loading,\n  nowTalkingTo: state.chat.nowTalkingTo\n});\n\nexport default connect(mapStateToProps, {\n  connectWebSocket,\n  sendMessage,\n  disconnectWebSocket\n})(Mesgs);","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUs/client/src/components/chat/Mesgs.js"],"names":["React","useEffect","useState","useRef","connect","PropTypes","connectWebSocket","sendMessage","disconnectWebSocket","Incoming_msg","Outgoing_msg","Mesgs","user","isAuthenticated","socket","msgData","loading","nowTalkingTo","ws","setWs","msg","setMsg","msgButton","executeScroll","current","scrollIntoView","_id","window","addEventListener","onUnmount","console","log","removeEventListener","send","data","me","from","to","time","Date","handleKeyPress","e","which","map","index","toString","target","value","prototypes","object","isRequired","func","mapStateToProps","state","auth","chat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  connectWebSocket,\n  sendMessage,\n  disconnectWebSocket,\n} from '../../actions/chat';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = ({\n  user,\n  isAuthenticated,\n  socket,\n  msgData,\n  loading,\n  connectWebSocket,\n  sendMessage,\n  nowTalkingTo,\n  disconnectWebSocket,\n}) => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n\n  const msgButton = useRef(null);\n  const executeScroll = () => {\n    msgButton.current.scrollIntoView();\n  };\n\n  useEffect(() => {\n    if (loading && isAuthenticated) {\n      connectWebSocket(user._id);\n    }\n    executeScroll();\n  }, [loading, isAuthenticated, connectWebSocket, executeScroll]);\n\n  //DidMount時綁定unlaod事件\n  useEffect(() => {\n    window.addEventListener('onbeforeunload', onUnmount());\n    console.log('進行綁定！');\n  }, []);\n  //WillUnmount時移除綁定事件\n  useEffect(() => {\n    return () => {\n      window.removeEventListener('onbeforeunload', onUnmount());\n      console.log('解除綁定！');\n    };\n  }, []);\n\n  const onUnmount = () => {\n    disconnectWebSocket();\n  };\n\n  const send = () => {\n    if (msg === '') {\n      return;\n    }\n    const data = {\n      me: true,\n      from: user._id,\n      to: nowTalkingTo,\n      time: new Date(),\n      msg: msg,\n    };\n\n    sendMessage(socket, data); //action 裡的function\n\n    setMsg('');\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.which === 13) {\n      send();\n    }\n  };\n  return (\n    <div className='mesgs'>\n      <div className='msg_history'>\n        {/*  */}\n\n        {msgData &&\n          msgData.map((data, index) =>\n            data.me === true ? (\n              <Outgoing_msg\n                msg={data.msg}\n                key={data.toString() + index}\n                time={data.time}\n              />\n            ) : (\n              <Incoming_msg\n                msg={data.msg}\n                key={data.toString() + index}\n                time={data.time}\n              />\n            )\n          )}\n\n        {/*  */}\n        <div ref={msgButton}></div>\n      </div>\n\n      <div className='type_msg'>\n        <div className='input_msg_write'>\n          {/* Input massage */}\n          <input\n            type='text'\n            className='write_msg'\n            value={msg}\n            onChange={(e) => {\n              setMsg(e.target.value);\n            }}\n            onKeyPress={(e) => handleKeyPress(e)}\n            placeholder='Type a message'\n          />\n\n          <button className='msg_send_btn' type='button' onClick={send}>\n            <i className='fa fa-paper-plane-o' aria-hidden='true'></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMesgs.prototypes = {\n  msgData: PropTypes.object.isRequired,\n  disconnectWebSocket: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  socket: state.chat.socket,\n  msgData: state.chat.msgData,\n  loading: state.chat.loading,\n  nowTalkingTo: state.chat.nowTalkingTo,\n});\n\nexport default connect(mapStateToProps, {\n  connectWebSocket,\n  sendMessage,\n  disconnectWebSocket,\n})(Mesgs);\n"]},"metadata":{},"sourceType":"module"}