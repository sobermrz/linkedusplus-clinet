{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Mesgs.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport webSocket, { Socket } from 'socket.io-client';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = () => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n  const [msgData, setmsgData] = useState([]);\n\n  const connectWebSocket = () => {\n    //開啟\n    setWs(webSocket('http://localhost:8888'));\n  };\n\n  useEffect(() => {\n    ws == null && connectWebSocket();\n\n    if (ws) {\n      //連線成功在 console 中打印訊息\n      console.log('success connect!');\n      console.log('ws id: ' + ws.id); //設定監聽\n\n      initWebSocket();\n    }\n\n    return () => {\n      console.log('close');\n    };\n  }, [ws]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    ws.on('getMessage', data => {\n      setmsgData([JSON.parse(data), ...msgData]);\n      console.log(data);\n      console.log(data.from, ': ', data.msg, msgData.length);\n      console.log(data.time);\n    });\n  };\n\n  const sendMessage = () => {\n    const data = {\n      from: 'Andrew',\n      to: 'Nicole',\n      time: new Date(),\n      msg: msg\n    }; //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n\n    ws != null && ws.emit('getMessage', data);\n    setMsg('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"mesgs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"msg_history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, msgData.map(data => /*#__PURE__*/React.createElement(Incoming_msg, {\n    msg: data.msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Incoming_msg, {\n    msg: \"test msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Outgoing_msg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"type_msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input_msg_write\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    class: \"write_msg\",\n    value: msg,\n    onChange: e => {\n      setMsg(e.target.value);\n    },\n    placeholder: \"Type a message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"msg_send_btn\",\n    type: \"button\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-paper-plane-o\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Mesgs;","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Mesgs.js"],"names":["React","Fragment","useEffect","useState","webSocket","Socket","Incoming_msg","Outgoing_msg","Mesgs","ws","setWs","msg","setMsg","msgData","setmsgData","connectWebSocket","console","log","id","initWebSocket","on","data","JSON","parse","from","length","time","sendMessage","to","Date","emit","map","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport webSocket, { Socket } from 'socket.io-client';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = () => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n\n  const [msgData, setmsgData] = useState([]);\n\n  const connectWebSocket = () => {\n    //開啟\n    setWs(webSocket('http://localhost:8888'));\n  };\n\n  useEffect(() => {\n    ws == null && connectWebSocket();\n    if (ws) {\n      //連線成功在 console 中打印訊息\n      console.log('success connect!');\n      console.log('ws id: ' + ws.id);\n      //設定監聽\n      initWebSocket();\n    }\n    return () => {\n      console.log('close');\n    };\n  }, [ws]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    ws.on('getMessage', (data) => {\n      setmsgData([JSON.parse(data), ...msgData]);\n      console.log(data);\n      console.log(data.from, ': ', data.msg, msgData.length);\n      console.log(data.time);\n    });\n  };\n\n  const sendMessage = () => {\n    const data = {\n      from: 'Andrew',\n      to: 'Nicole',\n      time: new Date(),\n      msg: msg,\n    };\n\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    ws != null && ws.emit('getMessage', data);\n    setMsg('');\n  };\n\n  return (\n    <div class='mesgs'>\n      <div class='msg_history'>\n        {/*  */}\n        {msgData.map((data) => (\n          <Incoming_msg msg={data.msg} />\n        ))}\n        <Incoming_msg msg='test msg' />\n        <Outgoing_msg />\n        {/*  */}\n      </div>\n\n      <div class='type_msg'>\n        <div class='input_msg_write'>\n          {/* Input massage */}\n          <input\n            type='text'\n            class='write_msg'\n            value={msg}\n            onChange={(e) => {\n              setMsg(e.target.value);\n            }}\n            placeholder='Type a message'\n          />\n\n          <button class='msg_send_btn' type='button' onClick={sendMessage}>\n            <i class='fa fa-paper-plane-o' aria-hidden='true'></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Mesgs;\n"]},"metadata":{},"sourceType":"module"}