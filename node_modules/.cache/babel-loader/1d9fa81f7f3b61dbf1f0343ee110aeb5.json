{"ast":null,"code":"import React,{useEffect,useState}from'react';import{connect}from'react-redux';import{setTalker}from'../../actions/chat';var Chat_list=function Chat_list(_ref){var nowTalkingTo=_ref.nowTalkingTo,userId=_ref.userId,name=_ref.name,avatar=_ref.avatar,active=_ref.active,setTalker=_ref.setTalker,allMsgData=_ref.allMsgData;useEffect(function(){if(active){setTalker(userId,allMsgData);active=false;}},[]);var _onClick=function onClick(e){//要調action用方法更新msgData nowTalingTo active_chat\nconsole.log('you click ',name,userId);setTalker(userId,allMsgData);};return/*#__PURE__*/React.createElement(\"div\",{className:\"chat_list \".concat(nowTalkingTo===userId?'active_chat':''),onClick:function onClick(e){return _onClick(e);}},/*#__PURE__*/React.createElement(\"div\",{className:\"chat_people\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat_img\"},' ',/*#__PURE__*/React.createElement(\"img\",{src:avatar,alt:name}),' '),/*#__PURE__*/React.createElement(\"div\",{className:\"chat_ib\"},/*#__PURE__*/React.createElement(\"h5\",null,name,\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"chat_date\"},\" \")))));};var mapStateToProps=function mapStateToProps(state){return{nowTalkingTo:state.chat.nowTalkingTo,allMsgData:state.chat.allMsgData};};export default connect(mapStateToProps,{setTalker:setTalker})(Chat_list);","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUs/client/src/components/chat/Chat_list.js"],"names":["React","useEffect","useState","connect","setTalker","Chat_list","nowTalkingTo","userId","name","avatar","active","allMsgData","onClick","e","console","log","mapStateToProps","state","chat"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,SAAT,KAA0B,oBAA1B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAQZ,IAPJC,CAAAA,YAOI,MAPJA,YAOI,CANJC,MAMI,MANJA,MAMI,CALJC,IAKI,MALJA,IAKI,CAJJC,MAII,MAJJA,MAII,CAHJC,MAGI,MAHJA,MAGI,CAFJN,SAEI,MAFJA,SAEI,CADJO,UACI,MADJA,UACI,CACJV,SAAS,CAAC,UAAM,CACd,GAAIS,MAAJ,CAAY,CACVN,SAAS,CAACG,MAAD,CAASI,UAAT,CAAT,CACAD,MAAM,CAAG,KAAT,CACD,CACF,CALQ,CAKN,EALM,CAAT,CAOA,GAAME,CAAAA,QAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,CAAD,CAAO,CACrB;AACAC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BP,IAA1B,CAAgCD,MAAhC,EACAH,SAAS,CAACG,MAAD,CAASI,UAAT,CAAT,CACD,CAJD,CAMA,mBACE,2BACE,SAAS,qBAAeL,YAAY,GAAKC,MAAjB,CAA0B,aAA1B,CAA0C,EAAzD,CADX,CAEE,OAAO,CAAE,iBAACM,CAAD,QAAOD,CAAAA,QAAO,CAACC,CAAD,CAAd,EAFX,eAIE,2BAAK,SAAS,CAAC,aAAf,eACE,2BAAK,SAAS,CAAC,UAAf,EACG,GADH,cAEE,2BAAK,GAAG,CAAEJ,MAAV,CAAkB,GAAG,CAAED,IAAvB,EAFF,CAEkC,GAFlC,CADF,cAKE,2BAAK,SAAS,CAAC,SAAf,eACE,8BACGA,IADH,kBACS,4BAAM,SAAS,CAAC,WAAhB,MADT,CADF,CALF,CAJF,CADF,CAkBD,CAxCD,CA0CA,GAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCX,YAAY,CAAEW,KAAK,CAACC,IAAN,CAAWZ,YADS,CAElCK,UAAU,CAAEM,KAAK,CAACC,IAAN,CAAWP,UAFW,CAAZ,EAAxB,CAKA,cAAeR,CAAAA,OAAO,CAACa,eAAD,CAAkB,CAAEZ,SAAS,CAATA,SAAF,CAAlB,CAAP,CAAwCC,SAAxC,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setTalker } from '../../actions/chat';\n\nconst Chat_list = ({\n  nowTalkingTo,\n  userId,\n  name,\n  avatar,\n  active,\n  setTalker,\n  allMsgData,\n}) => {\n  useEffect(() => {\n    if (active) {\n      setTalker(userId, allMsgData);\n      active = false;\n    }\n  }, []);\n\n  const onClick = (e) => {\n    //要調action用方法更新msgData nowTalingTo active_chat\n    console.log('you click ', name, userId);\n    setTalker(userId, allMsgData);\n  };\n\n  return (\n    <div\n      className={`chat_list ${nowTalkingTo === userId ? 'active_chat' : ''}`}\n      onClick={(e) => onClick(e)}\n    >\n      <div className='chat_people'>\n        <div className='chat_img'>\n          {' '}\n          <img src={avatar} alt={name} />{' '}\n        </div>\n        <div className='chat_ib'>\n          <h5>\n            {name} <span className='chat_date'> </span>\n          </h5>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  nowTalkingTo: state.chat.nowTalkingTo,\n  allMsgData: state.chat.allMsgData,\n});\n\nexport default connect(mapStateToProps, { setTalker })(Chat_list);\n"]},"metadata":{},"sourceType":"module"}