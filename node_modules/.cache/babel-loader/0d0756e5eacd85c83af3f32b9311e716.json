{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import Search from'./Search';import{getFriendsProfiles}from'../../actions/profile';import Chat_list from'./Chat_list';import Spinner from'../layout/Spinner';import Moment from'react-moment';import moment from'moment';import{setTalker}from'../../actions/chat';var Inbox_people=function Inbox_people(_ref){var _ref$profile=_ref.profile,friends=_ref$profile.friends,profile_loading=_ref$profile.profile_loading,chat_loading=_ref.chat_loading,getFriendsProfiles=_ref.getFriendsProfiles;//要讀取所有朋友資料\nuseEffect(function(){getFriendsProfiles();},[getFriendsProfiles]);return/*#__PURE__*/React.createElement(\"div\",{className:\"inbox_people\"},/*#__PURE__*/React.createElement(Search,null),/*#__PURE__*/React.createElement(\"div\",{className:\"inbox_chat\"},profile_loading||chat_loading?/*#__PURE__*/React.createElement(Spinner,null):friends.length>0?friends.map(function(friend,index){return/*#__PURE__*/React.createElement(Chat_list,{key:friend.user._id,userId:friend.user._id,name:friend.user.name,avatar:friend.user.avatar,active:index===0?true:false});}):/*#__PURE__*/React.createElement(\"span\",null,\"No friends found...\")));};var mapStateToProps=function mapStateToProps(state){return{profile:state.profile,chat_loading:state.chat.loading,nowTalkingTo:state.chat.nowTalkingTo,allMsgData:state.chat.allMsgData};};export default connect(mapStateToProps,{getFriendsProfiles:getFriendsProfiles,setTalker:setTalker})(Inbox_people);","map":{"version":3,"sources":["/Users/andrew/Documents/NEU/CSYE7220-DevOps/hw/linkedUsPlus/linkedUsPlus-client/src/components/chat/Inbox_people.js"],"names":["React","useEffect","connect","Search","getFriendsProfiles","Chat_list","Spinner","Moment","moment","setTalker","Inbox_people","profile","friends","profile_loading","chat_loading","length","map","friend","index","user","_id","name","avatar","mapStateToProps","state","chat","loading","nowTalkingTo","allMsgData"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,kBAAT,KAAmC,uBAAnC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,SAAT,KAA0B,oBAA1B,CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAIf,uBAHJC,OAGI,CAHOC,OAGP,cAHOA,OAGP,CAHgBC,eAGhB,cAHgBA,eAGhB,CAFJC,YAEI,MAFJA,YAEI,CADJV,kBACI,MADJA,kBACI,CACJ;AACAH,SAAS,CAAC,UAAM,CACdG,kBAAkB,GACnB,CAFQ,CAEN,CAACA,kBAAD,CAFM,CAAT,CAIA,mBACE,2BAAK,SAAS,CAAC,cAAf,eACE,oBAAC,MAAD,MADF,cAEE,2BAAK,SAAS,CAAC,YAAf,EACGS,eAAe,EAAIC,YAAnB,cACC,oBAAC,OAAD,MADD,CAEGF,OAAO,CAACG,MAAR,CAAiB,CAAjB,CACFH,OAAO,CAACI,GAAR,CAAY,SAACC,MAAD,CAASC,KAAT,qBACV,oBAAC,SAAD,EACE,GAAG,CAAED,MAAM,CAACE,IAAP,CAAYC,GADnB,CAEE,MAAM,CAAEH,MAAM,CAACE,IAAP,CAAYC,GAFtB,CAGE,IAAI,CAAEH,MAAM,CAACE,IAAP,CAAYE,IAHpB,CAIE,MAAM,CAAEJ,MAAM,CAACE,IAAP,CAAYG,MAJtB,CAKE,MAAM,CAAEJ,KAAK,GAAK,CAAV,CAAc,IAAd,CAAqB,KAL/B,EADU,EAAZ,CADE,cAWF,sDAdJ,CAFF,CADF,CAsBD,CAhCD,CAsCA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCb,OAAO,CAAEa,KAAK,CAACb,OADmB,CAElCG,YAAY,CAAEU,KAAK,CAACC,IAAN,CAAWC,OAFS,CAGlCC,YAAY,CAAEH,KAAK,CAACC,IAAN,CAAWE,YAHS,CAIlCC,UAAU,CAAEJ,KAAK,CAACC,IAAN,CAAWG,UAJW,CAAZ,EAAxB,CAOA,cAAe1B,CAAAA,OAAO,CAACqB,eAAD,CAAkB,CAAEnB,kBAAkB,CAAlBA,kBAAF,CAAsBK,SAAS,CAATA,SAAtB,CAAlB,CAAP,CACbC,YADa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Search from './Search';\nimport { getFriendsProfiles } from '../../actions/profile';\nimport Chat_list from './Chat_list';\nimport Spinner from '../layout/Spinner';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { setTalker } from '../../actions/chat';\nconst Inbox_people = ({\n  profile: { friends, profile_loading },\n  chat_loading,\n  getFriendsProfiles,\n}) => {\n  //要讀取所有朋友資料\n  useEffect(() => {\n    getFriendsProfiles();\n  }, [getFriendsProfiles]);\n\n  return (\n    <div className='inbox_people'>\n      <Search />\n      <div className='inbox_chat'>\n        {profile_loading || chat_loading ? (\n          <Spinner />\n        ) : friends.length > 0 ? (\n          friends.map((friend, index) => (\n            <Chat_list\n              key={friend.user._id}\n              userId={friend.user._id}\n              name={friend.user.name}\n              avatar={friend.user.avatar}\n              active={index === 0 ? true : false}\n            />\n          ))\n        ) : (\n          <span>No friends found...</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nInbox_people.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  chat_loading: state.chat.loading,\n  nowTalkingTo: state.chat.nowTalkingTo,\n  allMsgData: state.chat.allMsgData,\n});\n\nexport default connect(mapStateToProps, { getFriendsProfiles, setTalker })(\n  Inbox_people\n);\n"]},"metadata":{},"sourceType":"module"}