{"ast":null,"code":"import _regeneratorRuntime from\"/Users/andrew/mern-workspace/linkedUs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/andrew/mern-workspace/linkedUs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/andrew/mern-workspace/linkedUs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/andrew/mern-workspace/linkedUs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/andrew/mern-workspace/linkedUs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{connect}from'react-redux';import{Link,Redirect}from'react-router-dom';import{setAlert}from'../../actions/alert';import{register}from'../../actions/auth';//import axios from 'axios';\nvar Register=function Register(_ref){var setAlert=_ref.setAlert,register=_ref.register,isAuthenticated=_ref.isAuthenticated;var _useState=useState({name:'',email:'',password:'',password2:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var name=formData.name,email=formData.email,password=formData.password,password2=formData.password2;var _onChange=function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var _onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(password!==password2){setAlert('Password do not match!','danger');}else{register({name:name,email:email,password:password});// 之後改用redux來實現\n// const newUser = {\n//     name,\n//     email,\n//     password\n// }\n// try {\n//     const config = {\n//         headers: {\n//             'Content-Type': 'application/json'\n//         }\n//     }\n//     const body = JSON.stringify(newUser);\n//     const res = await axios.post('/api/users', body, config);\n//     console.log(res.data);\n// } catch (err) {\n//     console.error(err.response.data);\n// }\n}case 2:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();if(isAuthenticated){return/*#__PURE__*/React.createElement(Redirect,{to:\"/dashboard\"});}return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"large text-primary\"},\"Sign Up\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-user\"}),\" Create Your Account\"),/*#__PURE__*/React.createElement(\"form\",{className:\"form\",onSubmit:function onSubmit(e){return _onSubmit(e);}},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:function onChange(e){return _onChange(e);},required:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:email,onChange:function onChange(e){return _onChange(e);},required:true}),/*#__PURE__*/React.createElement(\"small\",{className:\"form-text\"},\"This site uses Gravatar so if you want a profile image, use a Gravatar email\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",value:password,onChange:function onChange(e){return _onChange(e);},minLength:\"6\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Confirm Password\",name:\"password2\",value:password2,onChange:function onChange(e){return _onChange(e);},minLength:\"6\"})),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary\",value:\"Register\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"my-1\"},\"Already have an account? \",/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\"Sign In\")));};//檢測傳來的props以的資料類別是否正確以及存在\nvar mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};};//將要執行的action的方法和store連接再一起\n//以便執行後，store會自動調用dispatch(action)，並使用reducer來進行更新state\n//這裡將mapDispatcher方法寫到了setAlert裡面\n//setAlert 會回傳 mapDispatchToProps\n//connect API: connect(mapStateToProps, mapDispatchToProps)(Register);\n//這裡不會用到mapStateToProps，故爲null\nexport default connect(mapStateToProps,{setAlert:setAlert,register:register})(Register);","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUs/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","Link","Redirect","setAlert","register","Register","isAuthenticated","name","email","password","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n//import axios from 'axios';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: '',\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (password !== password2) {\n            setAlert('Password do not match!', 'danger');\n        } else {\n            register({ name, email, password });\n\n            // 之後改用redux來實現\n            // const newUser = {\n            //     name,\n            //     email,\n            //     password\n            // }\n\n            // try {\n            //     const config = {\n            //         headers: {\n            //             'Content-Type': 'application/json'\n            //         }\n            //     }\n\n            //     const body = JSON.stringify(newUser);\n\n            //     const res = await axios.post('/api/users', body, config);\n            //     console.log(res.data);\n\n            // } catch (err) {\n            //     console.error(err.response.data);\n            // }\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard' />\n    }\n\n    return (\n        <Fragment>\n            <h1 className='large text-primary'>Sign Up</h1>\n            <p className='lead'>\n                <i className='fas fa-user'></i> Create Your Account\n      </p>\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Name'\n                        name='name'\n                        value={name}\n                        onChange={(e) => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='email'\n                        placeholder='Email Address'\n                        name='email'\n                        value={email}\n                        onChange={(e) => onChange(e)}\n                        required\n                    />\n                    <small className='form-text'>\n                        This site uses Gravatar so if you want a profile image, use a\n                        Gravatar email\n          </small>\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        onChange={(e) => onChange(e)}\n                        minLength='6'\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='password'\n                        placeholder='Confirm Password'\n                        name='password2'\n                        value={password2}\n                        onChange={(e) => onChange(e)}\n                        minLength='6'\n                    />\n                </div>\n                <input type='submit' className='btn btn-primary' value='Register' />\n            </form>\n            <p className='my-1'>\n                Already have an account? <Link to='/login'>Sign In</Link>\n            </p>\n        </Fragment>\n    );\n};\n\n//檢測傳來的props以的資料類別是否正確以及存在\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\n\n//將要執行的action的方法和store連接再一起\n//以便執行後，store會自動調用dispatch(action)，並使用reducer來進行更新state\n//這裡將mapDispatcher方法寫到了setAlert裡面\n//setAlert 會回傳 mapDispatchToProps\n//connect API: connect(mapStateToProps, mapDispatchToProps)(Register);\n//這裡不會用到mapStateToProps，故爲null\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n"]},"metadata":{},"sourceType":"module"}