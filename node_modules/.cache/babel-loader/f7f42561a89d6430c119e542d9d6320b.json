{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Chat.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport webSocket, { Socket } from 'socket.io-client';\nimport Inbox_people from './Inbox_people';\nimport Mesgs from './Mesgs';\n\nconst Chat = () => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n\n  const connectWebSocket = () => {\n    //開啟\n    setWs(webSocket('http://localhost:8888'));\n  };\n\n  useEffect(() => {\n    ws == null && connectWebSocket();\n\n    if (ws) {\n      //連線成功在 console 中打印訊息\n      console.log('success connect!');\n      console.log('ws id: ' + ws.id); //設定監聽\n\n      initWebSocket();\n    }\n\n    return () => {\n      ws.close();\n    };\n  }, [ws]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    ws.on('getMessage', message => {\n      console.log(message);\n    });\n  };\n\n  const sendMessage = () => {\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    ws != null && ws.emit('getMessage', {\n      user: 'Andrew',\n      to: 'Nicole',\n      msg: msg\n    });\n    setMsg('');\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Messaging\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container_msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"messaging\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"inbox_msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Inbox_people, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Mesgs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Chat.js"],"names":["React","Fragment","useEffect","useState","PropTypes","Link","connect","Spinner","webSocket","Socket","Inbox_people","Mesgs","Chat","ws","setWs","msg","setMsg","connectWebSocket","console","log","id","initWebSocket","close","on","message","sendMessage","emit","user","to"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,IAAoBC,MAApB,QAAkC,kBAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMc,gBAAgB,GAAG,MAAM;AAC7B;AACAH,IAAAA,KAAK,CAACN,SAAS,CAAC,uBAAD,CAAV,CAAL;AACD,GAHD;;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,EAAE,IAAI,IAAN,IAAcI,gBAAgB,EAA9B;;AACA,QAAIJ,EAAJ,EAAQ;AACN;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYN,EAAE,CAACO,EAA3B,EAHM,CAIN;;AACAC,MAAAA,aAAa;AACd;;AACD,WAAO,MAAM;AACXR,MAAAA,EAAE,CAACS,KAAH;AACD,KAFD;AAGD,GAZQ,EAYN,CAACT,EAAD,CAZM,CAAT;;AAcA,QAAMQ,aAAa,GAAG,MAAM;AAC1B;AACAR,IAAAA,EAAE,CAACU,EAAH,CAAM,YAAN,EAAqBC,OAAD,IAAa;AAC/BN,MAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACD,KAFD;AAGD,GALD;;AAOA,QAAMC,WAAW,GAAG,MAAM;AACxB;AACAZ,IAAAA,EAAE,IAAI,IAAN,IACEA,EAAE,CAACa,IAAH,CAAQ,YAAR,EAAsB;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,EAAE,EAAE,QAAtB;AAAgCb,MAAAA,GAAG,EAAEA;AAArC,KAAtB,CADF;AAEAC,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GALD;;AAOA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CAFF,CADF;AAaD,CAlDD;;AAoDA,eAAeJ,IAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport webSocket, { Socket } from 'socket.io-client';\nimport Inbox_people from './Inbox_people';\nimport Mesgs from './Mesgs';\n\nconst Chat = () => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n\n  const connectWebSocket = () => {\n    //開啟\n    setWs(webSocket('http://localhost:8888'));\n  };\n\n  useEffect(() => {\n    ws == null && connectWebSocket();\n    if (ws) {\n      //連線成功在 console 中打印訊息\n      console.log('success connect!');\n      console.log('ws id: ' + ws.id);\n      //設定監聽\n      initWebSocket();\n    }\n    return () => {\n      ws.close();\n    };\n  }, [ws]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    ws.on('getMessage', (message) => {\n      console.log(message);\n    });\n  };\n\n  const sendMessage = () => {\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    ws != null &&\n      ws.emit('getMessage', { user: 'Andrew', to: 'Nicole', msg: msg });\n    setMsg('');\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Messaging</h1>\n      <div class='container_msg'>\n        <div class='messaging'>\n          <div class='inbox_msg'>\n            <Inbox_people />\n            <Mesgs />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}