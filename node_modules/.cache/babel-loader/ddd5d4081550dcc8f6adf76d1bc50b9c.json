{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Mesgs.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport webSocket, { Socket } from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { connectWebSocket } from '../../actions/chat';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = () => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n  const [msgData, setmsgData] = useState([]);\n\n  const connectWebSocket = () => {\n    //開啟\n    setWs(webSocket('http://localhost:8888'));\n  };\n\n  useEffect(() => {\n    ws == null && connectWebSocket();\n\n    if (ws) {\n      //連線成功在 console 中打印訊息\n      console.log('success connect!');\n      console.log('ws id: ' + ws.id); //設定監聽\n\n      initWebSocket();\n    }\n\n    return () => {\n      console.log('close');\n    };\n  }, [ws]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    ws.on('getMessage', data => {\n      //setmsgData([{ msg: data.msg, time: data.time }, ...msgData]);\n      updateMsgData(data.msg, data.time); //console.log(data.from, ': ', data.msg, msgData.length);\n    });\n  };\n\n  const updateMsgData = (msg, time) => {\n    console.log(msg, time);\n    const newMsg = msg;\n    const newTime = time;\n\n    if (msgData.length == 0) {\n      setmsgData([{\n        msg: newMsg,\n        time: newTime\n      }]);\n    } else {\n      setmsgData([{\n        msg: newMsg,\n        time: newTime\n      }, ...msgData]);\n    }\n\n    console.log('array length is: ', msgData.length); //console.log(msgData);\n  };\n\n  const sendMessage = () => {\n    const data = {\n      from: 'Andrew',\n      to: 'Nicole',\n      time: new Date(),\n      msg: msg\n    }; //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n\n    ws != null && ws.emit('getMessage', data);\n    setMsg('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"mesgs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"msg_history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Incoming_msg, {\n    msg: \"test msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Outgoing_msg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), msgData.map(data => /*#__PURE__*/React.createElement(Incoming_msg, {\n    msg: data.msg,\n    key: data.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"type_msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input_msg_write\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    class: \"write_msg\",\n    value: msg,\n    onChange: e => {\n      setMsg(e.target.value);\n    },\n    placeholder: \"Type a message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"msg_send_btn\",\n    type: \"button\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-paper-plane-o\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updateMsgData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"test\"))));\n};\n\nMesgs.prototypes = {\n  msgData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  msgData: state.chat.msgData\n});\n\nexport default connect(mapStateToProps, {})(Mesgs);","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Mesgs.js"],"names":["React","Fragment","useEffect","useState","webSocket","Socket","connect","PropTypes","connectWebSocket","Incoming_msg","Outgoing_msg","Mesgs","ws","setWs","msg","setMsg","msgData","setmsgData","console","log","id","initWebSocket","on","data","updateMsgData","time","newMsg","newTime","length","sendMessage","from","to","Date","emit","map","e","target","value","prototypes","object","isRequired","mapStateToProps","state","chat"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport webSocket, { Socket } from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { connectWebSocket } from '../../actions/chat';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = () => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n\n  const [msgData, setmsgData] = useState([]);\n\n  const connectWebSocket = () => {\n    //開啟\n    setWs(webSocket('http://localhost:8888'));\n  };\n\n  useEffect(() => {\n    ws == null && connectWebSocket();\n    if (ws) {\n      //連線成功在 console 中打印訊息\n      console.log('success connect!');\n      console.log('ws id: ' + ws.id);\n      //設定監聽\n      initWebSocket();\n    }\n    return () => {\n      console.log('close');\n    };\n  }, [ws]);\n\n  const initWebSocket = () => {\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    ws.on('getMessage', (data) => {\n      //setmsgData([{ msg: data.msg, time: data.time }, ...msgData]);\n      updateMsgData(data.msg, data.time);\n      //console.log(data.from, ': ', data.msg, msgData.length);\n    });\n  };\n\n  const updateMsgData = (msg, time) => {\n    console.log(msg, time);\n    const newMsg = msg;\n    const newTime = time;\n    if (msgData.length == 0) {\n      setmsgData([{ msg: newMsg, time: newTime }]);\n    } else {\n      setmsgData([{ msg: newMsg, time: newTime }, ...msgData]);\n    }\n\n    console.log('array length is: ', msgData.length);\n    //console.log(msgData);\n  };\n\n  const sendMessage = () => {\n    const data = {\n      from: 'Andrew',\n      to: 'Nicole',\n      time: new Date(),\n      msg: msg,\n    };\n\n    //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n    ws != null && ws.emit('getMessage', data);\n    setMsg('');\n  };\n\n  return (\n    <div class='mesgs'>\n      <div class='msg_history'>\n        {/*  */}\n        <Incoming_msg msg='test msg' />\n        <Outgoing_msg />\n        {msgData.map((data) => (\n          <Incoming_msg msg={data.msg} key={data.time} />\n        ))}\n\n        {/*  */}\n      </div>\n\n      <div class='type_msg'>\n        <div class='input_msg_write'>\n          {/* Input massage */}\n          <input\n            type='text'\n            class='write_msg'\n            value={msg}\n            onChange={(e) => {\n              setMsg(e.target.value);\n            }}\n            placeholder='Type a message'\n          />\n\n          <button class='msg_send_btn' type='button' onClick={sendMessage}>\n            <i class='fa fa-paper-plane-o' aria-hidden='true'></i>\n          </button>\n          <button onClick={updateMsgData}>test</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMesgs.prototypes = {\n  msgData: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  msgData: state.chat.msgData,\n});\n\nexport default connect(mapStateToProps, {})(Mesgs);\n"]},"metadata":{},"sourceType":"module"}