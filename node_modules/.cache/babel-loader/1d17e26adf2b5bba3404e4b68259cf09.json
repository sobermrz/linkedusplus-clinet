{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Mesgs.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport webSocket, { Socket } from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { connectWebSocket, sendMessage } from '../../actions/chat';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = ({\n  socket,\n  msgData,\n  loading,\n  connectWebSocket\n}) => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n  useEffect(() => {\n    if (loading) {\n      connectWebSocket();\n    }\n\n    return () => {\n      //進行登出socket\n      console.log('close');\n    };\n  }, [loading, connectWebSocket]);\n\n  const sendMessage = () => {\n    const data = {\n      me: true,\n      from: 'Andrew',\n      to: 'Nicole',\n      time: new Date(),\n      msg: msg\n    };\n    sendMessage(socket, data); //action 裡的function\n\n    setMsg('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"mesgs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"msg_history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Incoming_msg, {\n    msg: \"test msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), msgData.map(data => data.me === true ? /*#__PURE__*/React.createElement(Outgoing_msg, {\n    msg: data.msg,\n    key: data.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Incoming_msg, {\n    msg: data.msg,\n    key: data.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"type_msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input_msg_write\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    class: \"write_msg\",\n    value: msg,\n    onChange: e => {\n      setMsg(e.target.value);\n    },\n    placeholder: \"Type a message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"msg_send_btn\",\n    type: \"button\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-paper-plane-o\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })))));\n};\n\nMesgs.prototypes = {\n  msgData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  socket: state.chat.socket,\n  msgData: state.chat.msgData,\n  loading: state.chat.loading\n});\n\nexport default connect(mapStateToProps, {\n  connectWebSocket,\n  sendMessage\n})(Mesgs);","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUsV1/client/src/components/chat/Mesgs.js"],"names":["React","Fragment","useEffect","useState","webSocket","Socket","connect","PropTypes","connectWebSocket","sendMessage","Incoming_msg","Outgoing_msg","Mesgs","socket","msgData","loading","ws","setWs","msg","setMsg","console","log","data","me","from","to","time","Date","map","e","target","value","prototypes","object","isRequired","mapStateToProps","state","chat"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport webSocket, { Socket } from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { connectWebSocket, sendMessage } from '../../actions/chat';\nimport Incoming_msg from './Incoming_msg';\nimport Outgoing_msg from './Outgoing_msg';\n\nconst Mesgs = ({ socket, msgData, loading, connectWebSocket }) => {\n  const [ws, setWs] = useState(null);\n  const [msg, setMsg] = useState('');\n\n  useEffect(() => {\n    if (loading) {\n      connectWebSocket();\n    }\n    return () => {\n      //進行登出socket\n      console.log('close');\n    };\n  }, [loading, connectWebSocket]);\n\n  const sendMessage = () => {\n    const data = {\n      me: true,\n      from: 'Andrew',\n      to: 'Nicole',\n      time: new Date(),\n      msg: msg,\n    };\n\n    sendMessage(socket, data); //action 裡的function\n\n    setMsg('');\n  };\n\n  return (\n    <div class='mesgs'>\n      <div class='msg_history'>\n        {/*  */}\n\n        <Incoming_msg msg='test msg' />\n\n        {msgData.map((data) =>\n          data.me === true ? (\n            <Outgoing_msg msg={data.msg} key={data.time} />\n          ) : (\n            <Incoming_msg msg={data.msg} key={data.time} />\n          )\n        )}\n\n        {/*  */}\n      </div>\n\n      <div class='type_msg'>\n        <div class='input_msg_write'>\n          {/* Input massage */}\n          <input\n            type='text'\n            class='write_msg'\n            value={msg}\n            onChange={(e) => {\n              setMsg(e.target.value);\n            }}\n            placeholder='Type a message'\n          />\n\n          <button class='msg_send_btn' type='button' onClick={sendMessage}>\n            <i class='fa fa-paper-plane-o' aria-hidden='true'></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMesgs.prototypes = {\n  msgData: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  socket: state.chat.socket,\n  msgData: state.chat.msgData,\n  loading: state.chat.loading,\n});\n\nexport default connect(mapStateToProps, { connectWebSocket, sendMessage })(\n  Mesgs\n);\n"]},"metadata":{},"sourceType":"module"}