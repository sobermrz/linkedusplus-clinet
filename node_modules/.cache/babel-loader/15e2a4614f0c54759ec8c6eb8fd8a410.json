{"ast":null,"code":"import { UPDATE_MESSAGE, CONNECT_WEBSOCKET, DISCONNECT_WEBSOCKET, SET_TALKER } from '../actions/types';\nconst initialState = {\n  socket: null,\n  msgData: [],\n  allMsgData: new Map(),\n  friend: null,\n  loading: true\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CONNECT_WEBSOCKET:\n      return { ...state,\n        socket: payload,\n        loading: false\n      };\n\n    case UPDATE_MESSAGE:\n      return { ...state,\n        msgData: [...state.msgData, payload],\n        loading: false\n      };\n\n    case SET_TALKER:\n      return { ...state,\n        msgData: payload\n      };\n\n    case DISCONNECT_WEBSOCKET:\n      return {\n        socket: null,\n        msg: [],\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/andrew/mern-workspace/linkedUsV1/client/src/reducers/chat.js"],"names":["UPDATE_MESSAGE","CONNECT_WEBSOCKET","DISCONNECT_WEBSOCKET","SET_TALKER","initialState","socket","msgData","allMsgData","Map","friend","loading","state","action","type","payload","msg"],"mappings":"AAAA,SACEA,cADF,EAEEC,iBAFF,EAGEC,oBAHF,EAIEC,UAJF,QAKO,kBALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,UAAU,EAAE,IAAIC,GAAJ,EAHO;AAInBC,EAAAA,MAAM,EAAE,IAJW;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;AAQA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKZ,iBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELN,QAAAA,MAAM,EAAES,OAFH;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,cAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,OAAO,EAAE,CAAC,GAAGK,KAAK,CAACL,OAAV,EAAmBQ,OAAnB,CAFJ;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,OAAO,EAAEQ;AAFJ,OAAP;;AAKF,SAAKZ,oBAAL;AACE,aAAO;AACLG,QAAAA,MAAM,EAAE,IADH;AAELU,QAAAA,GAAG,EAAE,EAFA;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOC,KAAP;AA1BJ;AA4BD","sourcesContent":["import {\n  UPDATE_MESSAGE,\n  CONNECT_WEBSOCKET,\n  DISCONNECT_WEBSOCKET,\n  SET_TALKER,\n} from '../actions/types';\n\nconst initialState = {\n  socket: null,\n  msgData: [],\n  allMsgData: new Map(),\n  friend: null,\n  loading: true,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case CONNECT_WEBSOCKET:\n      return {\n        ...state,\n        socket: payload,\n        loading: false,\n      };\n    case UPDATE_MESSAGE:\n      return {\n        ...state,\n        msgData: [...state.msgData, payload],\n        loading: false,\n      };\n    case SET_TALKER:\n      return {\n        ...state,\n        msgData: payload,\n      };\n\n    case DISCONNECT_WEBSOCKET:\n      return {\n        socket: null,\n        msg: [],\n        loading: true,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}